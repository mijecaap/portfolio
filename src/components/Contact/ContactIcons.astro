---
import { FaLinkedin, FaGithub, FaWhatsapp } from 'react-icons/fa';
import { MdEmail, MdLocationOn } from 'react-icons/md';
import { siteConfig } from '../../config/site.config';

const { contacts, location } = siteConfig;
---

<div id="contact-icons" class="flex flex-wrap justify-center md:justify-start gap-6 opacity-0 translate-x-[-50px] transition-all duration-1000">
    <a
        href={contacts.linkedin.url}
        target="_blank"
        rel="noopener noreferrer"
        class="contact-icon-link group"
    >
        <div class={`contact-icon ${contacts.linkedin.bgColor}`}>
            <FaLinkedin size={24} />
            <span class="contact-tooltip">{contacts.linkedin.label}</span>
        </div>
    </a>

    <a
        href={contacts.github.url}
        target="_blank"
        rel="noopener noreferrer"
        class="contact-icon-link group"
    >
        <div class={`contact-icon ${contacts.github.bgColor}`}>
            <FaGithub size={24} />
            <span class="contact-tooltip">{contacts.github.label}</span>
        </div>
    </a>

    <a
        href={contacts.email.url}
        class="contact-icon-link group"
    >
        <div class={`contact-icon ${contacts.email.bgColor}`}>
            <MdEmail size={24} />
            <span class="contact-tooltip">{contacts.email.label}</span>
        </div>
    </a>

    <a
        href={contacts.whatsapp.url}
        target="_blank"
        rel="noopener noreferrer"
        class="contact-icon-link group"
    >
        <div class={`contact-icon ${contacts.whatsapp.bgColor}`}>
            <FaWhatsapp size={24} />
            <span class="contact-tooltip">{contacts.whatsapp.label}</span>
        </div>
    </a>

    <div class="contact-icon-link group">
        <div class={`contact-icon ${location.bgColor}`}>
            <MdLocationOn size={24} />
            <span class="contact-tooltip">{location.label}</span>
        </div>
    </div>
</div>

<script>
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.remove('opacity-0', 'translate-x-[-50px]');
            }
        });
    }, { threshold: 0.1 });

    const contactIcons = document.getElementById('contact-icons');
    if (contactIcons) {
        observer.observe(contactIcons);
    }
</script>

<style>
    .contact-icon-link {
        position: relative;
        display: inline-block;
    }

    .contact-icon {
        @apply w-12 h-12 rounded-full flex items-center justify-center text-white
        transform transition-all duration-300 cursor-pointer
        hover:scale-110 hover:shadow-lg;
    }

    .contact-tooltip {
        @apply absolute -top-10 left-1/2 -translate-x-1/2 px-3 py-1 
        bg-[#1a1a1a] text-white text-sm rounded-md
        opacity-0 invisible transform -translate-y-2
        transition-all duration-300 whitespace-nowrap;
    }

    .contact-icon-link:hover .contact-tooltip {
        @apply opacity-100 visible translate-y-0;
    }
</style>